<?php

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function gsb_submenu_alias_update_form_node_type_form_alter(&$form, $form_state) {
  $form['workflow']['node_options']['#options']['force_pathauto'] = 'Force PathAuto'; 
}

/**
 * Implements hook_node_presave().
 */
function gsb_submenu_alias_update_node_presave($node) {
  $node_options = variable_get('node_options_'.$node->type, array());
  if (in_array('force_pathauto', $node_options)) {
    $node->path['pathauto'] = 1;
  }
}  

/**
 * Implements hook_path_update().
 */
function gsb_submenu_alias_update_path_update(array $path) {
  if ($path['original']['alias'] != $path['alias']) {
    _gsb_submenu_alias_update_set_subalias($path['original']['alias']);
  }
}

function _gsb_submenu_alias_update_set_subalias($alias) {
  $original_path = $alias . '/' . '%';
  $select = db_select('url_alias', 'ua');
  $select->condition('alias', $original_path, 'LIKE');
  $select->condition('alias', $original_path . '/%', 'NOT LIKE');
  $query = $select->fields('ua', array('source', 'alias'))->execute();
  $results = $query->fetchAll();
  $nids = array();
  foreach ($results as $result) {
    $pos = strpos($result->source, 'node/');
    if ($pos !== false) {
      $nids[] = str_replace('node/', '', $result->source);
    }
  }
  pathauto_node_update_alias_multiple($nids, 'bulkupdate', array('force' => TRUE));
}
