<?php

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function gsb_submenu_alias_update_form_node_type_form_alter(&$form, $form_state) {
  $form['workflow']['node_options']['#options']['force_pathauto'] = 'Default Force PathAuto to On';
}

/**
 * Implements hook_node_presave().
 */
function gsb_submenu_alias_update_node_presave($node) {
  if (isset($node->path['node_force_pathauto'])) {
    $node->path['pathauto'] = 1;
  }
}

/**
 * Implements hook_path_update().
 */
function gsb_submenu_alias_update_path_update(array $path) {
  if ($path['original']['alias'] != $path['alias']) {
    _gsb_submenu_alias_update_set_subalias($path['original']['alias']);
  }
}

function _gsb_submenu_alias_update_set_subalias($alias) {
  $original_path = $alias . '/' . '%';
  $select = db_select('url_alias', 'ua');
  $select->condition('alias', $original_path, 'LIKE');
  $select->condition('alias', $original_path . '/%', 'NOT LIKE');
  $query = $select->fields('ua', array('source', 'alias'))->execute();
  $results = $query->fetchAll();
  $nids = array();
  foreach ($results as $result) {
    $pos = strpos($result->source, 'node/');
    if ($pos !== false) {
      $nids[] = str_replace('node/', '', $result->source);
    }
  }
  pathauto_node_update_alias_multiple($nids, 'bulkupdate', array('force' => TRUE));
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gsb_submenu_alias_update_form_node_form_alter(&$form, &$form_state) {
  $force_pathauto = _gsb_submenu_alias_update_get_force_pathauto($form_state['node']);
  $form['path']['node_force_pathauto'] = array(
    '#type' => 'checkbox',
    '#title' => t('Force Pathauto'),
    '#default_value' => $force_pathauto,
    '#on_value' => TRUE,
    '#off_value' => FALSE,
    '#weight' => -5,
  );
  $form['path']['pathauto']['#states'] = array(
    'disabled' => array(':input[name="path[node_force_pathauto]"]' => array('checked' => TRUE)),
  );
  $form['actions']['submit']['#submit'][] = 'gsb_submenu_alias_update_node_submit';
}

/**
 * Handles submit for the node edit form, to save the force override information.
 */
function gsb_submenu_alias_update_node_submit($form, &$form_state) {
  if (empty($form_state['node'])) {
    return;
  }
  $fields = array(
    'nid' => $form_state['node']->nid,
    'force_pathauto' => (int)$form_state['values']['path']['node_force_pathauto'],
  );
  db_merge('submenu_alias_pathauto')
    ->fields($fields)
    ->key(array('nid' => $form_state['node']->nid))
    ->execute();
}

function _gsb_submenu_alias_update_get_force_pathauto($node) {
  $force_pathauto = null;

  if (isset($node->nid)) {
    $result = db_select('submenu_alias_pathauto', 'sa')
      ->fields('sa')
      ->condition('nid', $node->nid)
      ->execute();

    if ($result->rowCount()) {
      $force_pathauto = db_select('submenu_alias_pathauto', 'sa')
        ->fields('sa', array('force_pathauto'))
        ->condition('nid', $node->nid)
        ->execute()
        ->fetchField();
    }
  }
  if (is_null($force_pathauto)) {
    $force_pathauto = FALSE;
    $node_options = variable_get('node_options_' . $node->type, array());
    if (in_array('force_pathauto', $node_options)) {
      $force_pathauto = TRUE;
    }
  }

  return $force_pathauto;
}
